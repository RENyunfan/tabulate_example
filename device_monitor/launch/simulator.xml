<launch>
    <arg name="init_x" value="-3.0"/>
    <arg name="init_y" value="0.0"/>
    <arg name="init_z" value="1.0"/>
    <arg name="map_size_x_"/>
    <arg name="map_size_y_"/>
    <arg name="map_size_z_"/>
    <arg name="c_num"/>
    <arg name="p_num"/>
    <arg name="odometry_topic"/>
    <arg name="obj_num" value="1"/>

    <!-- map generation 1-->
    <param name="add_boundary" value="1"/>
    <param name="is_bridge" value="0"/>
    <param name="downsample_res" value="0.1"/>


    <arg name="global_cloud_topic" default="/map_generator/global_cloud"></arg>
    <arg name="frame_id" default="world"></arg>


    <node pkg="random_map_generator" type="random_map_node" name="random_map_node" output="screen">
        <rosparam command="load" file="$(find test_interface)/config/random_map_config.yaml"/>
        <!--        <remap from="/map_generator/global_cloud" to="/global_cloud"/>-->
        <remap from="/map_generator/global_cloud" to="$(arg global_cloud_topic)"/>
        <param name="map/frame_id" value="$(arg frame_id)" type="string"></param>
    </node>

    <node pkg="random_map_generator" type="color_map_for_pointcloud" name="color_map_for_pointcloud" output="screen">
        <remap from="~cloud" to="$(arg global_cloud_topic)"></remap>
        <param name="color/frame_id" value="$(arg frame_id)" type="string"></param>
        <param name="color/min_height" value="-2" type="double"></param>
        <param name="color/max_height" value="3.5" type="double"></param>
        <param name="color/map_type_name" value="Magma" type="string"></param>
        <param name="color/publish_rate" value="1.0" type="double"></param>
        <param name="color/inverse_color" value="false" type="bool"></param>
    </node>
<!--    <node pkg="map_generator" name="map_pub" type="map_pub" output="screen"-->
<!--          args="$(find map_generator)/resource/explore1.pcd">-->
<!--    </node>-->

<!--    <arg name="global_cloud_topic" default="/map_generator/global_cloud"></arg>-->
<!--    <arg name="frame_id" default="world"></arg>-->

<!--    <node pkg="random_map_generator" type="random_map_node" name="random_map_node" output="screen">-->
<!--        <rosparam command="load" file="$(find random_map_generator)/config/rrt_corridor.yaml"/>-->
<!--        &lt;!&ndash;        <remap from="/map_generator/global_cloud" to="/global_cloud"/>&ndash;&gt;-->
<!--        <remap from="/map_generator/global_cloud" to="$(arg global_cloud_topic)"/>-->
<!--        <param name="map/frame_id" value="$(arg frame_id)" type="string"></param>-->
<!--    </node>-->

<!--    <node pkg="random_map_generator" type="color_map_for_pointcloud" name="color_map_for_pointcloud" output="screen">-->
<!--        <remap from="~cloud" to="$(arg global_cloud_topic)"></remap>-->
<!--        <param name="color/frame_id" value="$(arg frame_id)" type="string"></param>-->
<!--        <param name="color/min_height" value="0" type="double"></param>-->
<!--        <param name="color/max_height" value="4.5" type="double"></param>-->
<!--        <param name="color/map_type_name" value="Magma" type="string"></param>-->
<!--        <param name="color/publish_rate" value="1.0" type="double"></param>-->
<!--        <param name="color/inverse_color" value="false" type="bool"></param>-->
<!--    </node>-->

    <!-- map generation 2 -->
    <!-- <node pkg ="map_generator" name ="random_forest" type ="random_forest" output = "screen">
      <remap from="~odometry"   to="$(arg odometry_topic)"/>
      <param name="init_state_x"   value="$(arg init_x)"/>
      <param name="init_state_y"   value="$(arg init_y)"/>
      <param name="map/x_size"     value="50.0" />
      <param name="map/y_size"     value="80.0" />
      <param name="map/z_size"     value="7.5" />
      <param name="map/resolution" value="0.05"/>

      <param name="ObstacleShape/seed" value="3"/>
      <param name="map/obs_num"    value="15"/>
      <param name="map/circle_num" value="0"/>
      <param name="ObstacleShape/lower_rad" value="1.5"/>
      <param name="ObstacleShape/upper_rad" value="3.5"/>
      <param name="ObstacleShape/lower_hei" value="7.5"/>
      <param name="ObstacleShape/upper_hei" value="7.5"/>

      <param name="ObstacleShape/radius_l" value="8.5"/>
      <param name="ObstacleShape/radius_h" value="15.0"/>
      <param name="ObstacleShape/z_l" value="2.0"/>
      <param name="ObstacleShape/z_h" value="2.0"/>
      <param name="ObstacleShape/theta" value="0.5"/>


      <param name="sensing/radius" value="10.0"/>
      <param name="sensing/rate"   value="10.0"/>
    </node> -->

    <!-- <node pkg ="traj_utils" name ="process_msg" type ="process_msg" output = "screen">
    </node> -->

    <!-- Simulator -->
    <node pkg="so3_quadrotor_simulator"
          type="quadrotor_simulator_so3"
          name="quadrotor_simulator_so3"
          output="screen">
        <param name="rate/odom" value="100.0"/>

        <param name="simulator/init_state_x" value="$(arg init_x)"/>
        <param name="simulator/init_state_y" value="$(arg init_y)"/>
        <param name="simulator/init_state_z" value="$(arg init_z)"/>
        <remap from="~odom" to="/lidar_slam/odom"/>
        <remap from="~cmd" to="/so3_cmd"/>
        <remap from="~imu" to="/lidar_slam/imu"/>
    </node>


    <node pkg="nodelet" type="nodelet" args="standalone so3_control/SO3ControlNodelet" name="so3_control"
          required="true" output="screen">
        <remap from="~odom" to="$(arg odometry_topic)"/>
        <remap from="~position_cmd" to="/planning/pos_cmd"/>
        <remap from="~motors" to="motors"/>
        <remap from="~corrections" to="corrections"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
        <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
        <param name="mass" value="0.74"/>
        <param name="use_angle_corrections " value="false"/>
        <param name="use_external_yaw " value="false"/>
        <param name="gains/rot/z" value="1.0"/>
        <param name="gains/ang/z" value="0.1"/>
    </node>

<!--    <node pkg="so3_disturbance_generator" name="so3_disturbance_generator" type="so3_disturbance_generator"-->
<!--          output="screen">-->
<!--        <remap from="~odom" to="/lidar_slam/odom"/>-->
<!--        <remap from="~noisy_odom" to="/state_ukf/odom"/>-->
<!--        <remap from="~correction" to="/lidar_slam/correction"/>-->
<!--        <remap from="~force_disturbance" to="force_disturbance"/>-->
<!--        <remap from="~moment_disturbance" to="moment_disturbance"/>-->
<!--    </node>-->

    <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="/lidar_slam/odom"/>
        <param name="mesh_resource" value="package://odom_visualization/meshes/f250.dae"/>
        <param name="color/a" value="1.0"/>
        <param name="color/r" value="1.0"/>
        <param name="color/g" value="1.0"/>
        <param name="color/b" value="1.0"/>
        <param name="covariance_scale" value="100.0"/>
        <param name="robot_scale" value="1.0"/>
    </node>

    <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node">
        <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml"/>

        <!-- Livox Avia -->
        <param name="is_360lidar" value="0"/>
        <param name="sensing_horizon" value="40.0"/>
        <param name="sensing_rate" value="10.0"/>
        <param name="estimation_rate" value="10.0"/>
        <param name="polar_resolution" value="0.2"/>
        <param name="yaw_fov" value="70.4"/>
        <param name="vertical_fov" value="77.2"/>
        <param name="min_raylength" value="1.0"/>
        <param name="livox_linestep" value="1.4"/>
        <param name="curvature_limit" value="100.0"/>
        <param name="hash_cubesize" value="5.0"/>
        <param name="use_avia_pattern" value="0"/>
        <param name="use_minicf_pattern" value="0"/>
        <param name="use_avia_pattern" value="0"/>
        <param name="use_vlp32_pattern" value="0"/>

        <!-- VLP-32 -->
        <!-- <param name="is_360lidar" value="1"/>
        <param name="sensing_horizon"  value="30.0" />
        <param name="sensing_rate"     value="10.0"/>
        <param name="estimation_rate"  value="10.0"/>
        <param name="polar_resolution" value="0.2"/> 
â€‹        <param name="yaw_fov" value="360.0"/>
        <param name="vertical_fov" value="60.0"/>
        <param name="min_raylength" value="1.0"/>
        <param name="livox_linestep" value="1.4"/> 
        <param name="curvature_limit" value="100.0"/> 
        <param name="hash_cubesize" value="5.0"/> 
        <param name="use_avia_pattern" value="0"/>
        <param name="use_vlp32_pattern" value="0"/>
        <param name="use_minicf_pattern" value="1"/> -->

        <param name="downsample_res" value="0.1"/>

        <param name="dynobj_enable" value="0"/>
        <param name="dynobject_size" value="0.8"/>
        <param name="dynobject_num" value="10"/>
        <param name="dyn_mode" value="0"/><!-- 0 for a=0, 1 for a=g, 2 for random walk -->
        <param name="dyn_velocity" value="1.0"/>

        <!-- collision parameter -->
        <param name="collisioncheck_enable" value="0"/>
        <param name="collision_range" value="0.3"/>

        <param name="output_pcd" value="0"/>

        <param name="map/x_size" value="$(arg map_size_x_)"/>
        <param name="map/y_size" value="$(arg map_size_y_)"/>
        <param name="map/z_size" value="$(arg map_size_z_)"/>

        <remap from="~global_map" to="/map_generator/global_cloud"/>
        <remap from="~odometry" to="$(arg odometry_topic)"/>
    </node>

</launch>
